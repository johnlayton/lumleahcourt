#!/usr/bin/env bash
#
# Summary: Run an executable with the selected Java version
#
# Usage: jenv exec <command> [arg1 arg2...]
#
# Runs an executable by first preparing PATH so that the selected Java
# version's `bin' directory is at the front.
#
# For example, if the currently selected Java version is 1.7.0:
#   jenv exec java -cp . org.pkg.MainClass
#
# is equivalent to:
#   JAVA_HOME="" PATH="$JENV_ROOT/versions/0.10.2/bin:$PATH" java -cp . org.pkg.MainClass

set -e
[ -n "$JENV_DEBUG" ] && set -x

# Provide jenv completions
if [ "$1" = "--complete" ]; then
  exec jenv shims --short
fi

export JENV_VERSION="$(jenv-version-name)"
JENV_COMMAND="$1"

if [ -z "$JENV_COMMAND" ]; then
  jenv-help --usage exec >&2
  exit 1
fi

JENV_COMMAND_PATH="$(jenv-which "$JENV_COMMAND")"
JENV_BIN_PATH="${JENV_COMMAND_PATH%/*}"

for script in $(jenv-hooks exec); do
  source "$script"
done

shift 1
if [ "$JENV_VERSION" != "system" ]; then
  export PATH="${JENV_BIN_PATH}:${PATH}"
fi

if [ "$JENV_VERSION" = "system" ]; then
  export JAVA_HOME="/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home"
else
  IFS=- read PROVIDER NUMBER <<< "$JENV_VERSION"
  if [ -d "${JENV_ROOT}/versions/$JENV_VERSION}" ]; then
    export JAVA_HOME="${JENV_ROOT}/versions/${JENV_VERSION}"
  elif [ -d "${JENV_ROOT}/versions/${PROVIDER}-${NUMBER}" ]; then
    export JAVA_HOME="${JENV_ROOT}/versions/${PROVIDER}-${NUMBER}"
  elif [ -d "${JENV_ROOT}/versions/${NUMBER}" ]; then
    export JAVA_HOME="${JENV_ROOT}/versions/${NUMBER}"
  elif [ -d "$(/usr/libexec/java_home -v ${NUMBER})" ]; then
    export JAVA_HOME="$(/usr/libexec/java_home -v ${NUMBER})"
  fi
fi

exec -a "$JENV_COMMAND" "$JENV_COMMAND_PATH" "$@"
